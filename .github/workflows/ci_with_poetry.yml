# .github/workflows/ci_with_poetry.yml
name: CI_WITH_POETRY

on: [push]

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VAULT_URL: ${{ secrets.VAULT_URL }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3

      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      - name: Set Poetry config
        run: |
          poetry config settings.virtualenvs.in-project false
          poetry config settings.virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Poetry export requirements.
        run: poetry export --format=requirements.txt --without-hashes --dev --output=docs/requirements.txt

      - name: Upload pytest test results
        uses: actions/upload-artifact@v1
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: ${{ github.workspace }}
          # run: echo ${{ github.workspace }} >> $GITHUB_PATH

      - name: Codecov
        uses: codecov/codecov-action@v1.0.13
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
