name: CI_updated_Feb_2021

on:
  push:
    paths-ignore:
      - 'docs/**'
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'docs/**'
    branches:
      - '**'

jobs:
  tests:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [Ubuntu]
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Bootstrap poetry
        shell: bash
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install .

      - name: Configure poetry
        shell: bash
        run: python -m poetry config virtualenvs.in-project true

      - name: Set env variables
        run: |
          echo "GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}}" >> $GITHUB_ENV
          echo "VAULT_URL=${{secrets.VAULT_URL}}" >> $GITHUB_ENV
          echo "VAULT_TOKEN=${{secrets.VAULT_TOKEN}}" >> $GITHUB_ENV

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: timeout 10s python -m poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        shell: bash
        run: python -m poetry install

      - name: Run pytest
        shell: bash
        run: python -m poetry run python -m pytest -v tests

      - name: Run code coverage
        shell: bash
        run: python -m poetry run python -m pytest -v tests

      - name: Codecov
        uses: codecov/codecov-action@v1.0.13
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
